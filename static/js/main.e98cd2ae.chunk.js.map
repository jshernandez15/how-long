{"version":3,"sources":["components/timer/Timer.js","containers/App.js","reportWebVitals.js","index.js"],"names":["getCalculateTime","initialTime","initial","dayjs","diff","duration","useState","calculateTime","setCalculateTime","useEffect","setInterval","setTimeout","confetti","particleCount","spread","startVelocity","colors","className","format","years","months","days","hours","minutes","seconds","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAOMA,EAAmB,SAACC,GACxB,IAAIC,EAAUC,EAAMF,GAIpB,OAHUE,IACWC,KAAKF,IAKb,cAAsB,IAAnBD,EAAkB,EAAlBA,YAChBE,SAAaE,KADqB,MAEQC,mBACxCH,WAAeH,EAAiBC,GAAc,iBAHd,mBAE3BM,EAF2B,KAEZC,EAFY,KAwBlC,OAlBAC,qBAAU,WACRC,aAAY,WACVF,EACEL,WAAeH,EAAiBC,GAAc,mBAE/C,KAEHU,YAAW,WAETC,YAAS,CACPC,cAAe,IACfC,OAAQ,IACRC,cAAe,GACfC,OALa,CAAC,UAAW,eAO1B,OACF,IAGD,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACE,uBAAMA,UAAU,iBAAhB,6CACwB,2CADxB,OACmD,IAAKd,EAAMF,GAAaiB,OAAO,iDAGpF,sBAAKD,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCV,EAAcY,aAEhD,sBAAKF,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,SAAgCV,EAAca,cAEhD,sBAAKH,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCV,EAAcc,YAEhD,sBAAKJ,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAU,eAAhB,SAAgCV,EAAce,aAEhD,sBAAKL,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,qBACA,sBAAMA,UAAU,eAAhB,SAAgCV,EAAcgB,eAEhD,sBAAKN,UAAU,eAAf,UACE,sBAAMA,UAAU,eAAhB,sBACA,sBAAMA,UAAU,eAAhB,SAAgCV,EAAciB,mBCrDvCC,G,MAXH,WACV,OACE,qBAAKR,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,gEACA,cAAC,EAAD,CAAOhB,YAAY,+BCGZyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e98cd2ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport duration from \"dayjs/plugin/duration\";\nimport * as dayjs from \"dayjs\";\nimport confetti from \"canvas-confetti\";\n\nimport \"./Timer.css\";\n\nconst getCalculateTime = (initialTime) => {\n  let initial = dayjs(initialTime);\n  let now = dayjs();\n  let difference = now.diff(initial);\n\n  return difference;\n};\n\nexport default ({ initialTime }) => {\n  dayjs.extend(duration);\n  const [calculateTime, setCalculateTime] = useState(\n    dayjs.duration(getCalculateTime(initialTime), \"milliseconds\")\n  );\n\n  useEffect(() => {\n    setInterval(() => {\n      setCalculateTime(\n        dayjs.duration(getCalculateTime(initialTime), \"milliseconds\")\n      );\n    }, 1000);\n\n    setTimeout(() => {\n      const colors = [\"#bb0000\", \"#ffffff\"];\n      confetti({\n        particleCount: 200,\n        spread: 100,\n        startVelocity: 40,\n        colors: colors,\n      });\n    }, 2000);\n  }, []);\n\n  return (\n    <div className=\"Timer\">\n      <div className=\"Timer__block\">\n        <span className=\"Timer__summary\">\n          Llegamos a nuestro üè† <strong>hogar</strong> el {\" \"}{dayjs(initialTime).format(\"DD [del mes] MM [del] YYYY [a las] HH:mm\")}\n        </span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">A√±os</span>\n        <span className=\"Timer__value\">{calculateTime.years()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Meses</span>\n        <span className=\"Timer__value\">{calculateTime.months()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">D&iacute;as</span>\n        <span className=\"Timer__value\">{calculateTime.days()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Horas</span>\n        <span className=\"Timer__value\">{calculateTime.hours()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Minutos</span>\n        <span className=\"Timer__value\">{calculateTime.minutes()}</span>\n      </div>\n      <div className=\"Timer__block\">\n        <span className=\"Timer__label\">Segundos</span>\n        <span className=\"Timer__value\">{calculateTime.seconds()}</span>\n      </div>\n    </div>\n  );\n};\n","import Timer from \"../components/timer/Timer\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>¬øCu√°nto llevamos juntos?</h1>\n        <Timer initialTime=\"2020-10-03 07:00:00\" />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}